plugins {
    id "java"
    id "io.freefair.lombok" version "6.0.0-m2"
    id "io.qameta.allure" version "2.9.6"
}

group "com.github.mikkimesser"
version "1.0"

repositories {
    mavenCentral()
}

def allureVersion = "2.18.1",
    restAssuredVersion = "5.1.1",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.36",
    ownerVersion = "1.0.12",
    fakerVersion = "1.0.2",
    jacksonVersion = "2.13.3",
    gsonVersion = "2.9.0",
    allureRestAssuredVersion = "2.18.1"


dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "com.github.javafaker:javafaker:$fakerVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.google.code.gson:gson:$gsonVersion",
            "io.qameta.allure:allure-rest-assured:$allureRestAssuredVersion"
}

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}